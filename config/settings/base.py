"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 사이트 로그인&회원가입을 위한 것들
    "django.contrib.sites",
    "rest_framework",
    "rest_framework.authtoken",  # authtoken 사용 session 로그인
    "dj_rest_auth",
    "dj_rest_auth.registration",
    "allauth",
    "allauth.account",
    "users",
    # jwt 사용띠
    "rest_framework_simplejwt.token_blacklist",
    # 소셜 로그인
    "allauth.socialaccount",
    "allauth.socialaccount.providers.kakao",
]
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": (
        # 'rest_framework.permissions.IsAuthenticated',
    ),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "dj_rest_auth.jwt_auth.JWTCookieAuthentication",
    ),
}

# 유저 세팅
AUTH_USER_MODEL = "users.User"
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
# ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = "email"
"""
여기선 안할꺼에염
"""
ACCOUNT_EMAIL_REQUIRED = True  # 무적권 필요하게
ACCOUNT_EMAIL_VERIFICATION = None  # 여기선 안할꺼얌
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"
# ACCOUNT_CONFIRM_EMAIL_ON_GET = True  # 유저가 받은 링크를 클릭하면 회원가입 완료되게끔
# ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1  # 굳이 할 필요 없을 듯
# ACCOUNT_EMAIL_SUBJECT_PREFIX = "도전하는 문돌이 블로그"  # 이메일에 자동으로 표시되는 사이트 정보
# 이메일 인증
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp.gmail.com"  # 메일 호스트 서버
# EMAIL_PORT = "587"  # gmail과 통신하는 포트
# EMAIL_HOST_USER = "shinisgood@wyerz.co.kr"  # 발신할 이메일
# EMAIL_HOST_PASSWORD = "dighfkdl73"  # 발신할 메일의 비밀번호
# EMAIL_USE_TLS = True  # TLS 보안 방법
# EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = (
#     "shinisgood@wyerz.co.kr"  # 사이트와 관련한 자동응답을 받을 이메일 주소,'webmaster@localhost'
# )
# SERVER_EMAIL = EMAIL_HOST_USER
# DEFAULT_FROM_MAIL = EMAIL_HOST_USER
# URL_FRONT = 'http://****' # 공개적인 웹페이지가 있다면 등록

SITE_ID = 1

# jwt사용을 위한 것
REST_USE_JWT = True
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=2),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("LOCAL_DB_NAME"),
        "PORT": os.getenv("LOCAL_DB_PORT"),
        "HOST": os.getenv("LOCAL_DB_HOST"),
        "USER": os.getenv("LOCAL_DB_USER"),
        "PASSWORD": os.getenv("LOCAL_DB_PASSWORD"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
